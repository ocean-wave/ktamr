<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ktamr.mapper.HaRecordsMapper">

    <resultMap id="haRecords" type="com.ktamr.domain.HaRecords">
        <id column="itemId" property="itemId" javaType="java.lang.Integer" jdbcType="INTEGER"></id>

        <result column="thNumber" property="thNumber" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="lfNumber" property="lfNumber" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="delta" property="delta" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="state" property="state" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="thTime" property="thTime" javaType="java.util.Date" ></result>
        <result column="lfTime" property="lfTime" javaType="java.util.Date" ></result>
        <association property="havMeterinfo" javaType="com.ktamr.domain.HavMeterinfo">
            <result column="userNo" property="userNo" javaType="java.lang.String" jdbcType="VARCHAR"></result>
            <result column="userName" property="userName" javaType="java.lang.String" jdbcType="VARCHAR"></result>
            <result column="userDs" property="userDs" javaType="java.lang.String" jdbcType="VARCHAR"></result>
            <result column="meterNumber" property="meterNumber" javaType="java.lang.Long" jdbcType="INTEGER"></result>
        </association>
    </resultMap>

    <select id="selectRecordsAndErrrecord" resultMap="haRecords" parameterType="java.util.Map">
        select * from (SELECT * FROM
            (SELECT rc1.itemId
            , rc1.th_number AS thNumber
            , rc1.delta AS delta
            , rc1.th_time AS thTime
            ,CASE WHEN rc1.delta &lt; 0 THEN '用量异常' ELSE rc1.state END AS state
            FROM ha_records rc1
            where rc1.meterid = #{meterId}
            <if test=" dataType == 'last'.toString() ">
                and rc1.th_time = (select max(th_time) from ha_records WHERE meterid = #{meterId})
            </if>
            UNION ALL
            SELECT er1.itemId
            , er1.n AS thNumber
            , 0 AS delta
            , er1.readtime AS csTime
            , er1.state AS state
            FROM ha_errRecord er1
            WHERE er1.meterid = #{meterId}
            <if test=" dataType == 'last'.toString() ">
                and er1.readtime = (select max(readtime) from ha_errRecord WHERE meterid = #{meterId})
            </if>
            ) t
            where 1=1
            <if test=" startDate != null and startDate != '' ">
                and t.thTime BETWEEN to_date(#{startDate}, 'yyyy-mm-dd hh24:mi:ss') AND to_date(#{endDate},
                'yyyy-mm-dd hh24:mi:ss')
            </if>
        ) t
        <!--多条件查询-->
        ${multipleConditions}
        order by thTime desc
    </select>

    <insert id="insertRecords" parameterType="com.ktamr.domain.HaMeter">
        INSERT INTO ha_records(meterid,rate,lf_number,lf_time,th_number,th_time,delta,state,cmdid)
       SELECT meterid,rate,th_number,th_r_time,#{thNumber},#{thRTime},#{thNumber},#{state},#{params.meterId}
        from ha_meter
        WHERE meterid=#{meterId}
    </insert>

    <insert id="insertRecordsTwo" parameterType="com.ktamr.domain.HaMeter">
        INSERT INTO ha_records(meterId, rate, lf_number, lf_time, th_number, th_time, delta, state, cmdid )
        SELECT m.meterId, m.rate , m.th_number, m.th_r_time, t.readNumber, t.readTime,t.readNumber-m.th_number, t.state, #{meterId}
        FROM ha_meter m, hat_metersRecordImport t
        WHERE t.check_result='待导入' AND m.meterId=t.meterId AND to_char(t.importTime,'yyyy-MM-dd HH24:mi:ss')=#{importTime}
    </insert>

    <select id="selectRecordsAndErrrecordTow" resultMap="haRecords" parameterType="com.ktamr.domain.HaRecords">
        SELECT t1.itemid
            , mi.用户号 AS userNo
            , mi.用户名 AS userName
            , mi.用户地址 AS userDs
            , mi.表号 AS meterNumber
            , t1.本次读数 AS thNumber
            , t1.上次读数 AS lfNumber
            , t1.抄收用量 AS delta
            , t1.表状态 AS state
            , t1.本次抄表时间 AS thTime
            , t1.上次抄表时间 AS lfTime
         FROM (SELECT rc1.itemid AS itemid
           , rc1.meterid AS meterid
           , rc1.th_number AS 本次读数
           , rc1.lf_number AS 上次读数
           , rc1.delta AS 抄收用量
           , rc1.state AS 表状态
           , to_char(rc1.th_time, 'yyyy-mm-dd hh24:mi:ss') AS 本次抄表时间
           ,to_char(rc1.lf_time, 'yyyy-mm-dd hh24:mi:ss') AS 上次抄表时间
	   FROM ha_records rc1 WHERE rc1.cmdid=#{id}
	   UNION
	   SELECT er1.itemid AS itemid
           , er1.meterid AS meterid
           , er1.n AS 本次读数
           , NULL AS 上次读数
           , NULL AS 抄收用量
           , er1.state AS 表状态
           , to_char(er1.readtime, 'yyyy-mm-dd hh24:mi:ss') AS 本次抄表时间
           , NULL AS 上次抄表时间
	   FROM ha_errRecord er1
	   WHERE er1.cmdid=#{id}) t1
       LEFT OUTER JOIN hav_meterinfo mi ON t1.meterid=mi.meterid
    </select>

    <select id="selectDosageHistory" resultMap="haRecords" parameterType="com.ktamr.domain.HaRecords">
        select
        t1.itemid AS itemid
        , t1.thNumber
        , t1.lfNumber
        , t1.delta
        , t1.state
        , t1.thTime
        , t1.lfTime
        from (
        SELECT rc1.itemid AS itemid
        , rc1.meterid AS meterid
        , rc1.th_number AS thNumber
        , rc1.lf_number AS lfNumber
        , rc1.delta AS delta
        , rc1.state AS state
        , rc1.th_time AS thTime
        ,rc1.lf_time AS lfTime
        FROM ha_records rc1
        UNION ALL
        SELECT er1.itemid AS itemid
        , er1.meterid AS meterid
        ,0 AS thNumber
        ,0 AS lfNumber
        , er1.n AS delta
        , er1.state AS state
        , er1.readtime AS thTime
        , er1.readtime AS lfTime
        FROM ha_errRecord er1
        ) t1
        where 1=1
        <!--数据范围过滤-->
        ${params.getRightCondition}
        <if test=" meterId != null ">
            and t1.meterid = #{meterId}
        </if>
        <if test=" params.startDate != null and params.startDate != '' ">
            AND t1.thTime BETWEEN to_date(#{params.startDate},'yyyy-mm-dd hh24:mi:ss') and to_date(#{params.endDate},'yyyy-mm-dd hh24:mi:ss')
        </if>
    </select>

</mapper>