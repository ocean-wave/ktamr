<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ktamr.mapper.HaMonFreezeMapper">

    <resultMap id="HaMonFreezeMap" type="com.ktamr.domain.HaMonfreeze">

        <result column="itemId" property="itemId" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="tRead" property="tRead" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="aMount" property="aMount" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="state" property="state" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="fDay" property="fDay" javaType="java.util.Date" ></result>
    </resultMap>

    <select id="selectMonFreezeMeterIdCount" resultType="java.lang.Integer"  parameterType="com.ktamr.domain.HaMeter">
        SELECT Count(meterid) FROM ha_monfreeze WHERE meterid=#{meterId} and fday=to_date(#{thRTime},'yyyy-mm-dd')-1
    </select>

    <update id="updateMonFreeze"  parameterType="com.ktamr.domain.HaMeter">
        UPDATE ha_monfreeze SET t_read=#{thNumber},l_read=#{thNumber},readTime=to_date(#{thRTime},'yyyy-mm-dd'),
        amount=0,state=#{state}
        WHERE meterid=#{meterId} and fday=to_date(#{thRTime},'yyyy-mm-dd')-CAST(date_part('day', current_date)  as  INTEGER)
    </update>

    <insert id="insertMonFreeze" useGeneratedKeys="true"  keyProperty="resultParams.MonFreezeId"  parameterType="com.ktamr.domain.HaMeter">
        INSERT INTO ha_monfreeze(meterid, meterNumber, centorid, collectorid, fday, lday, readTime, state, t_read, l_read, amount)
        SELECT m.meterId, m.meterNumber, m.centorid, m.collectorid, to_date(#{thRTime},'yyyy-mm-dd')-1,m.fday,
         to_date(#{thRTime},'yyyy-mm-dd'),#{state},#{thNumber},#{thNumber},0
         from ha_meter m
         WHERE m.meterId=#{meterId}
    </insert>

    <select id="selectAllMonfreeze" resultMap="HaMonFreezeMap" parameterType="java.util.Map">
        select * from (SELECT meterid AS meterId
            , t_read AS tRead
            , amount AS aMount
            , fday AS fDay
            , state AS state
            FROM ha_monfreeze
            WHERE meterid = #{meterId}
            <if test="  startDate != null and startDate != ''  ">
                and fday BETWEEN to_date(#{startDate}, 'yyyy-mm-dd hh24:mi:ss') AND to_date(#{endDate},
                'yyyy-mm-dd hh24:mi:ss')
            </if>
        ) t
        <!--多条件查询-->
        ${multipleConditions}
        order by fday desc
    </select>

    <delete id="delHaMonFreeze">
        delete from ha_monfreeze where meterid=#{meterId}
    </delete>
</mapper>