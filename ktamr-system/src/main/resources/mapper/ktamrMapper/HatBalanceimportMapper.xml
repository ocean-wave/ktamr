<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ktamr.mapper.HatBalanceimportMapper">

    <!--添加状态为待校验    -->
    <insert id="insertHatBalanceimport" >
        INSERT INTO hat_balanceImport(userCode, userName, meterNumber, balance, state, importTime)
        values (#{userCode},#{userName},#{meterNumber},#{balance},'待校验',#{importTime})
    </insert>

    <!--导入用户编号校验1-->
    <update id="UserNumberCheck1">
        UPDATE hat_balanceImport t
        SET state='非法的用户编号'
        WHERE t.userCode is not NULL AND length(t.userCode)  <![CDATA[<= ]]>0 AND t.state='待校验' AND t.importTime=#{importTime}
    </update>

    <!--导入用户编号校验2-->
    <update id="UserNumberCheck2">
         UPDATE hat_balanceImport t0
         SET state='与表内用户编号重复' FROM hat_balanceImport t1
         WHERE t1.ID  <![CDATA[!= ]]> t0.ID AND t0.userCode is Not Null
		 AND t1.userCode=t0.userCode AND t0.state='待校验' AND t0.importTime=t1.importTime AND t0.importTime=#{importTime}
    </update>

    <!--导入档案内表号校验1-->
    <update id="TableNumberCheck1">
        UPDATE hat_balanceImport t
        SET state='非法的表号'
        WHERE t.meterNumber is not Null AND t.meterNumber  <![CDATA[<= ]]>0 AND t.state='待校验' AND t.importTime=#{importTime}
    </update>

    <!--导入档案内表号校验2-->
    <update id="TableNumberCheck2">
         UPDATE hat_balanceImport t0
		 SET state='与表内表号重复' FROM hat_balanceImport t1
		 WHERE t1.ID <![CDATA[!= ]]> t0.ID AND t0.userCode is NULL AND t0.meterNumber is not  NULL
		 AND t1.meterNumber=t0.meterNumber AND t0.state='待校验' AND t0.importTime=t1.importTime AND t0.importTime=#{importTime}
    </update>

    <!--匹配用户编号-->
    <update id="MatchingUserNumber">
        UPDATE hat_balanceImport t SET userId=cu.custid FROM ha_custom cu WHERE t.userCode is not NULL AND t.userCode=cu.custno
		AND t.state='待校验' AND t.importTime=#{importTime}
    </update>

    <!--匹配表号-->
    <update id="Matchingtablenumber">
        UPDATE hat_balanceImport t SET userId=mi.custid, state=CASE WHEN mi.custid is NULL THEN '匹配不到对应的用户'
		ELSE state END FROM hav_meterinfo mi WHERE t.userId is NULL AND t.meterNumber is not NULL
		AND t.meterNumber=mi.表号 AND t.state='待校验' AND t.importTime=#{importTime}
    </update>

    <!--校验余额-->
    <update id="CheckBalance">
        UPDATE hat_balanceImport t SET state=CASE WHEN t.balance is NULL THEN '余额为空' ELSE '待导入' END
		WHERE t.userId is not NULL AND t.state='待校验' AND t.importTime=#{importTime}
    </update>

    <!-- 查询总条目数   -->
    <select id="selectAllrows" resultType="Integer">
    SELECT COUNT(*) FROM hat_balanceImport WHERE importTime=#{importTime}
    </select>

    <!-- 查询待导入数   -->
    <select id="selectImports" resultType="Integer">
    SELECT COUNT(*) FROM hat_balanceImport WHERE state='待导入' AND importTime=#{importTime}
    </select>

    <!-- 查询用户余额确认列表    -->
    <select id="selectCustBalanceImportList" resultType="HatBalanceimport">
        SELECT id, state AS state, userCode AS userCode, userName AS userName, meterNumber::varchar(16) AS meterNumber, balance AS balance FROM hat_balanceImport
     WHERE importTime=#{importTime}
    </select>

    <!-- 修改用户余额   -->
    <update id="modifyUserBalance">
        UPDATE ha_custom cu SET balance=t.balance FROM hat_balanceImport t WHERE t.userId=cu.custid AND t.state='待导入' AND t.importTime=#{importTime}
    </update>

    <!--清理临时表    -->
    <delete id="cleanupTemporaryTables">
        DELETE FROM hat_balanceImport WHERE importTime=#{importTime}
    </delete>
</mapper>