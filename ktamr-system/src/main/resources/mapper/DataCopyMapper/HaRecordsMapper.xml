<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ktamr.mapper.HaRecordsMapper">

    <resultMap id="haRecords" type="com.ktamr.domain.HaRecords">
        <id column="itemid" property="itemId" javaType="java.lang.Integer" jdbcType="INTEGER"></id>

        <result column="thNumber" property="thNumber" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="lfNumber" property="lfNumber" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="delta" property="delta" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="state" property="state" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="thTime" property="thTime" javaType="java.util.Date" ></result>
        <result column="lfTime" property="lfTime" javaType="java.util.Date" ></result>
        <association property="havMeterinfo" javaType="com.ktamr.domain.HavMeterinfo">
            <result column="userNo" property="userNo" javaType="java.lang.String" jdbcType="VARCHAR"></result>
            <result column="userName" property="userName" javaType="java.lang.String" jdbcType="VARCHAR"></result>
            <result column="userDs" property="userDs" javaType="java.lang.String" jdbcType="VARCHAR"></result>
            <result column="meterNumber" property="meterNumber" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        </association>
    </resultMap>

    <select id="selectRecordsAndErrrecord" resultType="java.util.Map" parameterType="com.ktamr.common.parameter.ParameterInfo">
        SELECT * FROM
        (SELECT rc1.itemid
        , rc1.th_number AS thNumber
        , CAST (rc1.delta as TEXT)  AS delta
        , to_char(rc1.th_time, 'yyyy-mm-dd hh24:mi:ss') AS csTime
        ,CASE WHEN rc1.delta &lt; 0 THEN '用量异常' ELSE rc1.state END AS state
        FROM ha_records rc1
        WHERE rc1.th_time IN (
        SELECT MAX(rc2.th_time)
        FROM ha_records rc2
        WHERE rc2.meterid=rc1.meterid
        GROUP BY to_char(rc2.th_time, 'YYYY-MM-DD')) AND rc1.meterid=#{meterid}
        UNION ALL
        SELECT er1.itemid
        , er1.n AS thNumber
        , '' AS delta
        , to_char(er1.readtime, 'yyyy-mm-dd hh24:mi:ss') AS csTime
        , er1.state AS state
        FROM ha_errRecord er1
        WHERE er1.readtime IN (
        SELECT MAX(er2.readtime)
        FROM ha_errRecord er2
        WHERE er2.meterid=er1.meterid
        GROUP BY to_char(er2.readtime, 'YYYY-MM-DD')) AND er1.meterid=#{meterid}) t
        where 1=1
        <if test=" startDate != null and startDate != '' and endDate != null and endDate != '' ">
            and Left(t.csTime, 10) BETWEEN #{startDate} AND #{endDate}
        </if>
    </select>

    <select id="selectAllDayfreeze" resultType="java.util.Map" parameterType="com.ktamr.common.parameter.ParameterInfo">
        SELECT meterid AS itemid
        , t_read AS thNumber
        , amount AS delta
        , to_char(fday, 'YYYY-MM-DD') AS csTime
        , state AS state
        FROM ha_dayfreeze
        WHERE meterid=#{meterid}
        <if test=" startDate != null and startDate != '' and endDate != null and endDate != '' ">
            and to_char(fday, 'YYYY-MM-DD') BETWEEN #{startDate} AND #{endDate}
        </if>
    </select>

    <select id="selectAllMonfreeze" resultType="java.util.Map" parameterType="com.ktamr.common.parameter.ParameterInfo">
        SELECT meterid AS itemid
        , t_read AS thNumber
        , amount AS delta
        , to_char(fday, 'YYYY-MM-DD') AS csTime
        , state AS state
        FROM ha_monfreeze
        WHERE meterid=#{meterid}
        <if test=" startDate != null and startDate != '' and endDate != null and endDate != '' ">
            and to_char(fday, 'YYYY-MM-DD') BETWEEN #{startDate} AND #{endDate}
        </if>
    </select>

    <select id="selectFreeze" resultType="java.util.Map" parameterType="com.ktamr.common.parameter.ParameterInfo">
        SELECT fz.meterid
        , mi.用户号 AS userNo
        , mi.用户名 AS userName
        , mi.用户地址 AS userDs
        , trim(to_char(fz.meterNumber, '99999999999999')) AS meterNumber
        , fz.t_read AS tRead
        ,fz.l_read AS lRead
        ,fz.amount AS amount
        ,fz.state AS state
        ,to_char(fz.fday, 'YYYY-MM-DD') AS fday
        ,to_char(fz.readTime, 'yyyy-mm-dd hh24:mi:ss') AS readTime
        <if test=" dataType == 'lastDayFreeze' " >
            FROM ha_dayfreeze fz,hav_meterinfo mi,ha_area a
            WHERE fz.fday=(
            SELECT Max(fz2.fday)
            FROM ha_dayfreeze fz2
            WHERE fz2.meterid=fz.meterid
            GROUP BY fz2.meterid)
        </if>
        <if test=" dataType == 'lastMonFreeze'" >
            FROM ha_monfreeze fz,hav_meterinfo mi,ha_area a
            WHERE fz.readTime=(
            SELECT Max(fz2.readTime)
            FROM ha_monfreeze fz2
            WHERE fz2.meterid=fz.meterid
            GROUP BY fz2.meterid)
        </if>
        <if test=" dataType == 'dayFreeze'" >
            FROM ha_dayfreeze fz,hav_meterinfo mi,ha_area a
            WHERE Not isNull(fz.meterid)
        </if>
        <if test=" dataType == 'monFreeze'" >
            FROM ha_monfreeze fz,hav_meterinfo mi,ha_area a
            WHERE Not isNull(fz.meterid)
        </if>

        <if test=" dataType.substring(0,4) == 'last' and nodeType == 'area' and nodeIds != '' ">
            AND a.areaid IN (cast(#{nodeIds} as INTEGER))
        </if>
        <if test=" dataType.substring(0,4) == 'last' and nodeType == 'rgn' and nodeIds != '' ">
            AND Left(a.areaNo, 1) IN (#{nodeIds})
        </if>
        <if test=" dataType == 'dayFreeze' and startDate != null and startDate != '' and endDate != null and endDate != ''">
            AND to_char(fz.fday, 'YYYY-MM-DD') BETWEEN #{startDate} and #{endDate}
        </if>
        <if test=" dataType == 'monFreeze' and startDate != null and startDate != '' and endDate != null and endDate != ''">
            AND to_char(fz.readTime, 'YYYY-MM') BETWEEN #{startDate} and #{endDate}
        </if>
        <if test=" wheresql != null and wheresql != '' ">
            ${wheresql}
        </if>
        <if test=" keyWord != null and keyWord != '' ">
            and (mi.用户号 like '%${keyWord}%' or mi.用户名 like '%${keyWord}%'
            or mi.用户地址 like '%${keyWord}%')
        </if>
        limit 100
    </select>

    <select id="selectReplace" resultType="java.util.Map" parameterType="com.ktamr.common.parameter.ParameterInfo">
        SELECT r.recordId AS recordid
        ,mi.用户号 AS userNo
        ,mi.用户名 AS userName
        ,mi.用户地址 AS userDs
        ,trim(to_char(mi.表号, '9999999999999999')) AS dqMeterNumber
        ,trim(to_char(r.oldMeterNumber, '9999999999999999')) AS oldMeterNumber
        ,trim(to_char(r.newMeterNumber, '999999999999999999'))  AS newMeterNumber
        ,trim(to_char(r.finalRead, '999999999999999999')) AS finalRead
        ,trim(to_char(r.oriRead , '999999999999999999')) AS oriRead
        ,trim(to_char(r.finalUse, '999999999999999999'))  AS finalUse
        ,r.finalState AS finalState
        ,to_char(r.replaceDate,'yyyy-mm-dd hh24:mi:ss') AS replaceDate
        ,r.explain AS explain
        , r.replaceMan AS replaceMan
        FROM ha_replaceRecords r
        LEFT JOIN hav_meterinfo mi ON r.meterId=mi.meterId
        LEFT JOIN ha_area a ON a.areaid=mi.areaid
        WHERE length(trim(to_char(r.recordId, '9999999999999999')))>0

        <if test="nodeType == 'area' and nodeIds != '' ">
            AND a.areaid IN (cast(#{nodeIds} as INTEGER))
        </if>
        <if test="nodeType == 'rgn' and nodeIds != '' ">
            AND Left(a.areaNo, 1) IN (#{nodeIds})
        </if>
        <if test=" dataType == 'meterOriRead' ">
            AND r.newMeterNumber is null
        </if>
        <if test=" dataType == 'meterReplace'">
            AND length(trim(to_char(r.newMeterNumber, '99999999999999999')))!=0
        </if>
        <if test=" startDate != null and startDate != '' and endDate != null and endDate != '' ">
            AND to_char(r.replaceDate,'YYYY-MM-DD') BETWEEN #{startDate} and #{endDate}
        </if>
        <if test=" wheresql != null and wheresql != '' ">
            ${wheresql}
        </if>
        <if test=" keyWord != null and keyWord != '' ">
            and (mi.用户号 like '%${keyWord}%' or mi.用户名 like '%${keyWord}%'
            or mi.用户地址 like '%${keyWord}%' or trim(to_char(mi.表号, '9999999999999999')) like '%${keyWord}%'
            or trim(to_char(r.oldMeterNumber, '9999999999999999')) like '%${keyWord}%'
            or trim(to_char(r.newMeterNumber, '999999999999999999')) like '%${keyWord}%'
            or trim(to_char(r.finalRead, '999999999999999999')) like '%${keyWord}%'
            or trim(to_char(r.oriRead , '999999999999999999')) like '%${keyWord}%'
            or trim(to_char(r.finalUse, '999999999999999999')) like '%${keyWord}%'
            or r.finalState =  #{keyWord} or to_char(r.replaceDate,'yyyy-mm-dd') like '%${keyWord}%'
            or r.explain  like '%${keyWord}%' or r.replaceMan like '%${AkeyWord}%' )
        </if>
        ORDER BY mi.用户地址,to_char(r.replaceDate,'yyyy-mm-dd hh24:mi:ss')
    </select>

    <insert id="insertRecords" useGeneratedKeys="true"  keyProperty="resultParams.itemId" parameterType="com.ktamr.domain.HaMeter">
        INSERT INTO ha_records(meterid,rate,lf_number,lf_time,th_number,th_time,delta,state,cmdid)
       SELECT meterid,rate,th_number,th_r_time,#{thNumber},#{thRTime},#{thNumber},#{state},#{params.meterId}
        from ha_meter
        WHERE meterid=#{meterId}
    </insert>

    <select id="selectRecordsAndErrrecordTow" resultMap="haRecords" parameterType="com.ktamr.domain.HaRecords">
        SELECT t1.itemid
            , mi.用户号 AS userNo
            , mi.用户名 AS userName
            , mi.用户地址 AS userDs
            , mi.表号 AS meterNumber
            , t1.本次读数 AS thNumber
            , t1.上次读数 AS lfNumber
            , t1.抄收用量 AS delta
            , t1.表状态 AS state
            , t1.本次抄表时间 AS thTime
            , t1.上次抄表时间 AS lfTime
         FROM (SELECT rc1.itemid AS itemid
           , rc1.meterid AS meterid
           , rc1.th_number AS 本次读数
           , rc1.lf_number AS 上次读数
           , rc1.delta AS 抄收用量
           , rc1.state AS 表状态
           , to_char(rc1.th_time, 'yyyy-mm-dd hh24:mi:ss') AS 本次抄表时间
           ,to_char(rc1.lf_time, 'yyyy-mm-dd hh24:mi:ss') AS 上次抄表时间
	   FROM ha_records rc1 WHERE rc1.cmdid=#{id}
	   UNION
	   SELECT er1.itemid AS itemid
           , er1.meterid AS meterid
           , er1.n AS 本次读数
           , NULL AS 上次读数
           , NULL AS 抄收用量
           , er1.state AS 表状态
           , to_char(er1.readtime, 'yyyy-mm-dd hh24:mi:ss') AS 本次抄表时间
           , NULL AS 上次抄表时间
	   FROM ha_errRecord er1
	   WHERE er1.cmdid=#{id}) t1
       LEFT OUTER JOIN hav_meterinfo mi ON t1.meterid=mi.meterid
    </select>

    <select id="selectDosageHistory" resultMap="haRecords" parameterType="com.ktamr.common.parameter.ParameterInfo">
        select
        t1.itemid AS itemid
        ,mi.用户号 AS userNo
        , mi.用户名 AS userName
        , mi.用户地址 AS userDs
        , mi.表号 AS meterNumber
        , t1.thNumber
        , t1.lfNumber
        , t1.delta
        , t1.state
        , t1.thTime
        , t1.lfTime
        from (
        SELECT rc1.itemid AS itemid
        , rc1.meterid AS meterid
        , rc1.th_number AS thNumber
        , rc1.lf_number AS lfNumber
        , rc1.delta AS delta
        , rc1.state AS state
        , rc1.th_time AS thTime
        ,rc1.lf_time AS lfTime
        FROM ha_records rc1
        UNION ALL
        SELECT er1.itemid AS itemid
        , er1.meterid AS meterid
        ,0 AS thNumber
        ,0 AS lfNumber
        , er1.n AS delta
        , er1.state AS state
        , er1.readtime AS thTime
        , er1.readtime AS lfTime
        FROM ha_errRecord er1
        ) t1
        inner join hav_meterinfo mi on mi.meterid = t1.meterid
        inner join ha_area a on a.areaid=mi.areaid
        <if test=" nodeType == 'area' and nodeIds != '' ">
            AND a.areaid IN (cast(#{nodeIds} as INTEGER))
        </if>
        <if test=" nodeType == 'rgn' and nodeIds != '' ">
            AND Left(a.areaNo, 1) IN (#{nodeIds})
        </if>
        <if test=" monthType != null and monthType != '' ">
            AND a.DS=#{monthType}
        </if>
        <if test=" keyWord != null and keyWord != '' ">
            and (mi.用户号 like '%${keyWord}%' or mi.用户名 like '%${keyWord}%'
            or mi.用户地址 like '%${keyWord}%'
            )
        </if>
        <if test=" startDate != null and startDate != '' and endDate != null and endDate != '' ">
            AND to_char(to_date(t1.thTime,'yyyy-mm-dd'),'yyyy-mm-dd') BETWEEN #{startDate} AND #{endDate}
        </if>
        order by t1.thTime desc
    </select>

</mapper>